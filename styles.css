/* styles.css */



.w-full { width: 100%; }
.space-y-2 > * + * { margin-top: 0.5rem; }

/* Colors - using Obsidian CSS variables */
.text-green-500 { color: var(--color-green); }
.text-red-500 { color: var(--color-red); }
.text-blue-500 { color: var(--interactive-accent); }

/* Font utilities */
.font-medium { font-weight: 500; }
.text-sm { font-size: 0.875rem; }
.text-lg { font-size: 1.125rem; }

/* Border utilities */
.rounded { border-radius: 4px; }
.border { border: 1px solid var(--background-modifier-border); }
.border-slate-700 { border-color: var(--background-modifier-border-focus); }

/* Component styles */
.react-plugin-card {
    border: 1px solid var(--background-modifier-border);
    border-radius: 4px;
    background: var(--background-primary);
    margin-bottom: 1rem; }

.react-plugin-card-header {
    padding: 1rem;
    border-bottom: 1px solid var(--background-modifier-border); }

.react-plugin-card-title {
    margin: 0;
    font-size: 1.1em;
    font-weight: 600;
    color: var(--text-normal); }

.react-plugin-card-content { padding: 1rem; }

.react-plugin-tabs {
    display: flex;
    flex-direction: column;
    gap: 1rem; }

.react-plugin-tabs-list {
    display: flex;
    gap: 0.5rem;
    border-bottom: 1px solid var(--background-modifier-border);
    padding-bottom: 0.5rem; }

.react-plugin-tab-trigger {
    padding: 0.5rem 1rem;
    border: none;
    background: none;
    cursor: pointer;
    color: var(--text-muted);
    border-radius: 4px; }

.react-plugin-tab-trigger[data-state="active"] {
    background: var(--background-modifier-hover);
    color: var(--text-normal); }

/* Chart container styles */
.chart-container {
    border: 1px solid var(--background-modifier-border);
    border-radius: 4px;
    padding: 0;
    margin: 0;
    overflow: hidden; /* Add this to prevent any overflow */
    min-height: 400px;
    background: var(--background-secondary); }

    .tv-lightweight-charts {
        height: 500px !important; /* Force height if needed 
        overflow: visible; /* Show x-axis labels if they overflow */
    }
    

    
/* List styles */
.list-content {
    margin: 0;
    padding-left: 1.5rem;
    list-style-type: none; }

.list-content li {
    margin-bottom: 0.5rem;
    color: var(--text-normal); }

.heading {
    margin: 0 0 0.5rem 0;
    font-weight: 600; }

/* Prevent conflicts with Obsidian's styles */
.react-plugin-card button { box-shadow: none; }

.react-plugin-card button:hover { box-shadow: none; }
.react-component-error {
    margin: 0.5rem 0;
    font-size: 0.875rem;
}

.react-component-error pre {
    white-space: pre-wrap;
    word-break: break-word;
}

.react-component-container svg {
    display: inline-block !important;
    vertical-align: middle !important;
    height: 16px !important;
    width: 16px !important;
    margin-right: 4px !important;
  }
/* Dark mode adjustments are handled by Tailwind classes */
/*

This CSS file will be included with your plugin, and
available in the app when your plugin is enabled.

If your plugin does not need CSS, delete this file.

*/

/* Chart container styles */
.recharts-wrapper {
    min-height: 400px !important;
    min-width: 300px !important;
}

/* Ensure proper sizing for ResponsiveContainer */
.recharts-responsive-container {
    min-height: 400px !important;
    width: 100% !important;
}

/* Dark mode adjustments for charts */
.theme-dark .recharts-cartesian-grid line {
    stroke: rgba(255, 255, 255, 0.1);
}

.theme-dark .recharts-text {
    fill: rgba(255, 255, 255, 0.8);
}

.theme-dark .recharts-tooltip-wrapper {
    background-color: #1a1b1e;
    border: 1px solid rgba(255, 255, 255, 0.1);
}


/*Tail Wind stuff */
/* styles.css */

/* Layout */
.w-full { width: 100%; }
.w-3\/4 { width: 75%; }
.w-1\/2 { width: 50%; }
.h-64 { height: 16rem; }
.h-32 { height: 8rem; }
.h-16 { height: 4rem; }
.relative { position: relative; }
.absolute { position: absolute; }

/* Spacing */
.p-4 { padding: 1rem; }
.mt-16 { margin-top: 4rem; }
.mt-8 { margin-top: 2rem; }
.mt-4 { margin-top: 1rem; }
.mb-4 { margin-bottom: 1rem; }
.ml-8 { margin-left: 2rem; }
.top-2 { top: 0.5rem; }
.left-2 { left: 0.5rem; }

/* Block colors - with dark mode support */
.bg-red-200 { 
    background-color: rgba(254, 202, 202, 0.8); 
}
.bg-orange-200 { 
    background-color: rgba(254, 215, 170, 0.8); 
}
.bg-yellow-200 { 
    background-color: rgba(254, 240, 138, 0.8); 
}
.bg-slate-100 { 
    background-color: rgba(241, 245, 249, 0.8); 
}

.theme-dark .bg-red-200 { 
    background-color: rgba(254, 202, 202, 0.2); 
}
.theme-dark .bg-orange-200 { 
    background-color: rgba(254, 215, 170, 0.2); 
}
.theme-dark .bg-yellow-200 { 
    background-color: rgba(254, 240, 138, 0.2); 
}
.theme-dark .bg-slate-100 { 
    background-color: rgba(241, 245, 249, 0.1); 
}

/* Border colors */
.border-red-500 { border-color: rgb(239, 68, 68); }
.border-orange-500 { border-color: rgb(249, 115, 22); }
.border-yellow-500 { border-color: rgb(234, 179, 8); }

/* Border styles */
.border-2 { border-width: 2px; }
.rounded-lg { border-radius: 0.5rem; }

/* Grid */
.grid { display: grid; }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
.gap-4 { gap: 1rem; }

/* Typography */
.text-sm { font-size: 0.875rem; }
.font-medium { font-weight: 500; }

/* Flex */
.flex { display: flex; }
.items-center { align-items: center; }

/* Spacing utilities */
.space-y-4 > * + * { margin-top: 1rem; }
.space-y-2 > * + * { margin-top: 0.5rem; }



.theme-dark .react-component-container {
    color-scheme: dark;
}



/* Ensure buttons display properly */
.react-component-container button {
  cursor: pointer;
  font-family: inherit;
  box-shadow: none;
}

/* Color variables for icons */
.react-component-container .icon-like {
  color: var(--text-error) ;
}

.react-component-container .icon-comment {
  color: var(--text-accent) ;
}

/* Stats styling for post metrics */
.react-component-container .stats-item {
  display: flex;
  align-items: center;
  margin-right: 12px;
}

.react-component-container * {
    box-sizing: border-box;
  }
  
/* Card styles */
.card {
    background-color: var(--background-primary);
    border: 1px solid var(--background-modifier-border);
    border-radius: 0.5rem;
    width: 100%;
}

.card-header {
    padding: 1.5rem;
}

.card-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin: 0;
}

.card-content {
    padding: 1.5rem;
}





/* Base text positioning */
.nested-block-label {
    position: absolute;
    top: 8px;
    left: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    z-index: 10; /* Ensure text stays above blocks */
    background-color: inherit; /* Match parent block background */
    padding: 2px 6px;
    border-radius: 4px;
}

/* Ensure blocks stack properly */
.nested-block {
    position: relative;
    border: 2px solid;
    border-radius: 8px;
    margin-bottom: 1rem;
    z-index: 1; /* Base z-index */
}

/* Specific z-indices for each block type */
.nested-block.primary {
    z-index: 1;
}

.nested-block.secondary {
    z-index: 2;
}

.nested-block.tertiary {
    z-index: 3;
}

/* Adjust backgrounds to be slightly transparent */
.bg-red-200 { 
    background-color: rgba(254, 202, 202, 0.95); 
}
.bg-orange-200 { 
    background-color: rgba(254, 215, 170, 0.95); 
}
.bg-yellow-200 { 
    background-color: rgba(254, 240, 138, 0.95); 
}

/* Dark mode adjustments */
.theme-dark .bg-red-200 { 
    background-color: rgba(254, 202, 202, 0.15); 
}
.theme-dark .bg-orange-200 { 
    background-color: rgba(254, 215, 170, 0.15); 
}
.theme-dark .bg-yellow-200 { 
    background-color: rgba(254, 240, 138, 0.15); 
}

/* Ensure proper spacing */
.nested-block + .nested-block {
    margin-top: 2rem;
}

/* Add these styles to the existing styles.css file */

/* ===== Component UI Framework ===== */
/* These styles directly map Tailwind-like classes to CSS properties */

/* Layout */
.w-full { width: 100% !important; }
.max-w-3xl { max-width: 48rem !important; }
.mx-auto { margin-left: auto !important; margin-right: auto !important; }
.overflow-hidden { overflow: hidden !important; }

/* Borders */
.border { border-width: 1px !important; border-style: solid !important; }
.border-t { border-top-width: 1px !important; border-top-style: solid !important; }
.border-b { border-bottom-width: 1px !important; border-bottom-style: solid !important; }
.border-b-2 { border-bottom-width: 2px !important; border-bottom-style: solid !important; }
.rounded-md { border-radius: 0.375rem !important; }
.rounded-lg { border-radius: 0.5rem !important; }

/* Spacing */
.p-2 { padding: 0.5rem !important; }
.p-4 { padding: 1rem !important; }
.p-6 { padding: 1.5rem !important; }
.px-2 { padding-left: 0.5rem !important; padding-right: 0.5rem !important; }
.px-4 { padding-left: 1rem !important; padding-right: 1rem !important; }
.px-6 { padding-left: 1.5rem !important; padding-right: 1.5rem !important; }
.py-1 { padding-top: 0.25rem !important; padding-bottom: 0.25rem !important; }
.py-2 { padding-top: 0.5rem !important; padding-bottom: 0.5rem !important; }
.py-3 { padding-top: 0.75rem !important; padding-bottom: 0.75rem !important; }
.py-4 { padding-top: 1rem !important; padding-bottom: 1rem !important; }
.m-4 { margin: 1rem !important; }
.mt-2 { margin-top: 0.5rem !important; }
.mb-2 { margin-bottom: 0.5rem !important; }
.mb-4 { margin-bottom: 1rem !important; }
.mr-4 { margin-right: 1rem !important; }
.gap-1 { gap: 0.25rem !important; }
.gap-2 { gap: 0.5rem !important; }
.gap-4 { gap: 1rem !important; }
.space-y-2 > * + * { margin-top: 0.5rem !important; }
.space-y-3 > * + * { margin-top: 0.75rem !important; }
.space-y-4 > * + * { margin-top: 1rem !important; }

/* Typography */
.text-sm { font-size: 0.875rem !important; }
.text-lg { font-size: 1.125rem !important; }
.text-xl { font-size: 1.25rem !important; }
.font-medium { font-weight: 500 !important; }
.font-semibold { font-weight: 600 !important; }

/* Flex */
.flex { display: flex !important; }
.flex-col { flex-direction: column !important; }
.items-center { align-items: center !important; }
.justify-between { justify-content: space-between !important; }

/* Grid */
.grid { display: grid !important; }

/* ===== Component Styling - Light Theme ===== */

/* Card & Container */
.react-component-container {
  background-color: white;
  color: rgb(31, 41, 55);
  border-radius: 0.5rem;
  border: 1px solid rgb(229, 231, 235);
  width: 100%;
  overflow: hidden;
}

/* Header */
.react-component-container [class*="header"],
.react-component-container .bg-gray-50,
.react-component-container .bg-gray-100 {
  background-color: rgb(249, 250, 251);
  border-color: rgb(229, 231, 235);
}

/* Dark background areas */
.react-component-container .bg-gray-700 {
  background-color: rgb(55, 65, 81);
  color: rgb(243, 244, 246);
}

/* Tabs */
.react-component-container .border-blue-600 {
  border-color: rgb(37, 99, 235);
  color: rgb(37, 99, 235);
}

.react-component-container .text-blue-600,
.react-component-container .text-blue-500 {
  color: rgb(37, 99, 235);
}

.react-component-container .text-red-500,
.react-component-container .text-red-400 {
  color: rgb(239, 68, 68);
}

.react-component-container .text-green-600,
.react-component-container .text-green-400 {
  color: rgb(22, 163, 74);
}

.react-component-container .text-gray-500,
.react-component-container .text-gray-400 {
  color: rgb(107, 114, 128);
}

/* Button styles */
.react-component-container button {
  cursor: pointer;
  transition: background-color 0.2s, color 0.2s;
}

.react-component-container button.bg-gray-200,
.react-component-container .bg-gray-200 {
  background-color: rgb(229, 231, 235);
}

.react-component-container button.hover\:bg-gray-300:hover {
  background-color: rgb(209, 213, 219);
}

.react-component-container button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* ===== Dark Theme Overrides ===== */
.theme-dark .react-component-container {
  background-color: rgb(17, 24, 39);
  color: rgb(243, 244, 246);
  border-color: rgb(55, 65, 81);
}
/*
.theme-dark .react-component-container > div > div {
    background-color: #0800f8 ;
    border: 1px solid #3e4c5a;
    border-radius: 0.5rem;
    margin-bottom: 0.75rem;
    padding: 1rem;
  }*/
.theme-dark .react-component-container [class*="header"]{
  background-color: rgb(31, 41, 55);
  border-color: rgb(55, 65, 81);
}

.theme-dark .react-component-container button.bg-gray-700,
.theme-dark .react-component-container .bg-gray-700 {
  background-color: rgb(55, 65, 81);
}

.theme-dark .react-component-container button.hover\:bg-gray-600:hover {
  background-color: rgb(75, 85, 99);
}

/* Tailwind Color System - Properly Scoped for Obsidian */

/* Base color variables in light mode */
:root {
    /* Gray scale */
    --gray-50: rgb(249, 250, 251);
    --gray-100: rgb(243, 244, 246);
    --gray-200: rgb(229, 231, 235);
    --gray-300: rgb(209, 213, 219);
    --gray-400: rgb(156, 163, 175);
    --gray-500: rgb(107, 114, 128);
    --gray-600: rgb(75, 85, 99);
    --gray-700: rgb(55, 65, 81);
    --gray-800: rgb(31, 41, 55);
    --gray-900: rgb(17, 24, 39);
    
    /* Blue scale */
    --blue-50: rgb(239, 246, 255);
    --blue-100: rgb(219, 234, 254);
    --blue-200: rgb(191, 219, 254);
    --blue-300: rgb(147, 197, 253);
    --blue-400: rgb(96, 165, 250);
    --blue-500: rgb(59, 130, 246);
    --blue-600: rgb(37, 99, 235);
    --blue-700: rgb(29, 78, 216);
    --blue-800: rgb(30, 64, 175);
    --blue-900: rgb(30, 58, 138);
    
    /* Red scale */
    --red-50: rgb(254, 242, 242);
    --red-100: rgb(254, 226, 226);
    --red-200: rgb(254, 202, 202);
    --red-300: rgb(252, 165, 165);
    --red-400: rgb(248, 113, 113);
    --red-500: rgb(239, 68, 68);
    --red-600: rgb(220, 38, 38);
    --red-700: rgb(185, 28, 28);
    --red-800: rgb(153, 27, 27);
    --red-900: rgb(127, 29, 29);
    
    /* Green scale */
    --green-50: rgb(240, 253, 244);
    --green-100: rgb(220, 252, 231);
    --green-200: rgb(187, 247, 208);
    --green-300: rgb(134, 239, 172);
    --green-400: rgb(74, 222, 128);
    --green-500: rgb(34, 197, 94);
    --green-600: rgb(22, 163, 74);
    --green-700: rgb(21, 128, 61);
    --green-800: rgb(22, 101, 52);
    --green-900: rgb(20, 83, 45);
  }
  
  /* Dark mode color overrides - properly scoped */
  .theme-dark .react-component-container {
    /* Invert gray scale for dark mode */
    --gray-50: rgb(17, 24, 39);
    --gray-100: rgb(31, 41, 55);
    --gray-200: rgb(55, 65, 81);
    --gray-300: rgb(75, 85, 99);
    --gray-400: rgb(107, 114, 128);
    --gray-500: rgb(156, 163, 175);
    --gray-600: rgb(209, 213, 219);
    --gray-700: rgb(229, 231, 235);
    --gray-800: rgb(243, 244, 246);
    --gray-900: rgb(249, 250, 251);
    
    /* Adjust other colors for better visibility in dark mode */
    --blue-400: rgb(129, 182, 245);
    --blue-500: rgb(96, 165, 250);
    --blue-600: rgb(59, 130, 246);
    
    --red-400: rgb(252, 165, 165);
    --red-500: rgb(248, 113, 113);
    
    --green-400: rgb(134, 239, 172);
    --green-600: rgb(74, 222, 128);
  }
  
  /* Background colors - keep these at root level */
  .react-component-container .bg-gray-50 { background-color: var(--gray-50); }
  .react-component-container .bg-gray-100 { background-color: var(--gray-100); }
  .react-component-container .bg-gray-200 { background-color: var(--gray-200); }
  .react-component-container .bg-gray-300 { background-color: var(--gray-300); }
  .react-component-container .bg-gray-400 { background-color: var(--gray-400); }
  .react-component-container .bg-gray-500 { background-color: var(--gray-500); }
  .react-component-container .bg-gray-600 { background-color: var(--gray-600); }
  .react-component-container .bg-gray-700 { background-color: var(--gray-700); }
  .react-component-container .bg-gray-800 { background-color: var(--gray-800); }
  .react-component-container .bg-gray-900 { background-color: var(--gray-900); }
  
  .react-component-container .bg-blue-50 { background-color: var(--blue-50); }
  .react-component-container .bg-blue-100 { background-color: var(--blue-100); }
  .react-component-container .bg-blue-200 { background-color: var(--blue-200); }
  .react-component-container .bg-blue-300 { background-color: var(--blue-300); }
  .react-component-container .bg-blue-400 { background-color: var(--blue-400); }
  .react-component-container .bg-blue-500 { background-color: var(--blue-500); }
  .react-component-container .bg-blue-600 { background-color: var(--blue-600); }
  .react-component-container .bg-blue-700 { background-color: var(--blue-700); }
  .react-component-container .bg-blue-800 { background-color: var(--blue-800); }
  .react-component-container .bg-blue-900 { background-color: var(--blue-900); }
  
  .react-component-container .bg-red-50 { background-color: var(--red-50); }
  .react-component-container .bg-red-100 { background-color: var(--red-100); }
  .react-component-container .bg-red-200 { background-color: var(--red-200); }
  .react-component-container .bg-red-300 { background-color: var(--red-300); }
  .react-component-container .bg-red-400 { background-color: var(--red-400); }
  .react-component-container .bg-red-500 { background-color: var(--red-500); }
  .react-component-container .bg-red-600 { background-color: var(--red-600); }
  .react-component-container .bg-red-700 { background-color: var(--red-700); }
  .react-component-container .bg-red-800 { background-color: var(--red-800); }
  .react-component-container .bg-red-900 { background-color: var(--red-900); }
  
  .react-component-container .bg-green-50 { background-color: var(--green-50); }
  .react-component-container .bg-green-100 { background-color: var(--green-100); }
  .react-component-container .bg-green-200 { background-color: var(--green-200); }
  .react-component-container .bg-green-300 { background-color: var(--green-300); }
  .react-component-container .bg-green-400 { background-color: var(--green-400); }
  .react-component-container .bg-green-500 { background-color: var(--green-500); }
  .react-component-container .bg-green-600 { background-color: var(--green-600); }
  .react-component-container .bg-green-700 { background-color: var(--green-700); }
  .react-component-container .bg-green-800 { background-color: var(--green-800); }
  .react-component-container .bg-green-900 { background-color: var(--green-900); }
  
  /* Text colors - all scoped to react-component-container */
  .react-component-container .text-gray-50 { color: var(--gray-50); }
  .react-component-container .text-gray-100 { color: var(--gray-100); }
  .react-component-container .text-gray-200 { color: var(--gray-200); }
  .react-component-container .text-gray-300 { color: var(--gray-300); }
  .react-component-container .text-gray-400 { color: var(--gray-400); }
  .react-component-container .text-gray-500 { color: var(--gray-500); }
  .react-component-container .text-gray-600 { color: var(--gray-600); }
  .react-component-container .text-gray-700 { color: var(--gray-700); }
  .react-component-container .text-gray-800 { color: var(--gray-800); }
  .react-component-container .text-gray-900 { color: var(--gray-900); }
  
  .react-component-container .text-blue-50 { color: var(--blue-50); }
  .react-component-container .text-blue-100 { color: var(--blue-100); }
  .react-component-container .text-blue-200 { color: var(--blue-200); }
  .react-component-container .text-blue-300 { color: var(--blue-300); }
  .react-component-container .text-blue-400 { color: var(--blue-400); }
  .react-component-container .text-blue-500 { color: var(--blue-500); }
  .react-component-container .text-blue-600 { color: var(--blue-600); }
  .react-component-container .text-blue-700 { color: var(--blue-700); }
  .react-component-container .text-blue-800 { color: var(--blue-800); }
  .react-component-container .text-blue-900 { color: var(--blue-900); }
  
  .react-component-container .text-red-50 { color: var(--red-50); }
  .react-component-container .text-red-100 { color: var(--red-100); }
  .react-component-container .text-red-200 { color: var(--red-200); }
  .react-component-container .text-red-300 { color: var(--red-300); }
  .react-component-container .text-red-400 { color: var(--red-400); }
  .react-component-container .text-red-500 { color: var(--red-500); }
  .react-component-container .text-red-600 { color: var(--red-600); }
  .react-component-container .text-red-700 { color: var(--red-700); }
  .react-component-container .text-red-800 { color: var(--red-800); }
  .react-component-container .text-red-900 { color: var(--red-900); }
  
  .react-component-container .text-green-50 { color: var(--green-50); }
  .react-component-container .text-green-100 { color: var(--green-100); }
  .react-component-container .text-green-200 { color: var(--green-200); }
  .react-component-container .text-green-300 { color: var(--green-300); }
  .react-component-container .text-green-400 { color: var(--green-400); }
  .react-component-container .text-green-500 { color: var(--green-500); }
  .react-component-container .text-green-600 { color: var(--green-600); }
  .react-component-container .text-green-700 { color: var(--green-700); }
  .react-component-container .text-green-800 { color: var(--green-800); }
  .react-component-container .text-green-900 { color: var(--green-900); }
  
  /* Border colors */
  .react-component-container .border-gray-50 { border-color: var(--gray-50); }
  .react-component-container .border-gray-100 { border-color: var(--gray-100); }
  .react-component-container .border-gray-200 { border-color: var(--gray-200); }
  .react-component-container .border-gray-300 { border-color: var(--gray-300); }
  .react-component-container .border-gray-400 { border-color: var(--gray-400); }
  .react-component-container .border-gray-500 { border-color: var(--gray-500); }
  .react-component-container .border-gray-600 { border-color: var(--gray-600); }
  .react-component-container .border-gray-700 { border-color: var(--gray-700); }
  .react-component-container .border-gray-800 { border-color: var(--gray-800); }
  .react-component-container .border-gray-900 { border-color: var(--gray-900); }
  
  .react-component-container .border-blue-400 { border-color: var(--blue-400); }
  .react-component-container .border-blue-500 { border-color: var(--blue-500); }
  .react-component-container .border-blue-600 { border-color: var(--blue-600); }
  
  .react-component-container .border-red-400 { border-color: var(--red-400); }
  .react-component-container .border-red-500 { border-color: var(--red-500); }
  
  .react-component-container .border-green-400 { border-color: var(--green-400); }
  .react-component-container .border-green-600 { border-color: var(--green-600); }


  /* General tab button reset*/
  .react-component-container [role="tab"],
  .react-component-container [class*="tab-trigger"],
  .react-component-container div[class*="flex"][class*="border-b"] > button {
    /* Reset background to transparent by default */
    background-color: transparent !important;
    transition: background-color 0.2s, color 0.2s, border-color 0.2s !important;
  }
  
  /* Target all elements that might have background color issues */
  .react-component-container pre,
  .react-component-container code,
  .react-component-container [class*="code-"],
  .react-component-container [class*="cm-"] {
    /* Force inheritance and override Obsidian's Code Styler */
    all: inherit;
    display: block;
    white-space: inherit;
    background-color: inherit !important;
    color: inherit !important;
    padding: inherit !important;
    margin: inherit !important;
    border: inherit !important;
    border-radius: inherit !important;
    box-shadow: none !important;
    font-family: inherit !important;
  }
  
  /* Restore code-specific properties after inheritance */
  .react-component-container pre,
  .react-component-container code {
    font-family: monospace;
    white-space: pre;
  }
  .react-component-container .code-styler-pre,
  .react-component-container .code-styler-pre * {
    background-color: inherit !important;
    color: inherit !important;
  }

/* Navigation buttons */
.react-component-container .w-14 {width: 3.5rem !important;}
.react-component-container .h-14 {height: 3.5rem !important;}
.react-component-container .rounded-full {border-radius: 9999px !important;}
.react-component-container .border {border-width: 1px !important; border-style: solid !important;}
.react-component-container .shadow-xl {box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1) !important;}
.react-component-container .backdrop-blur-sm {backdrop-filter: blur(4px) !important;}
.react-component-container .disabled\:opacity-30:disabled {opacity: 0.3 !important;}
.react-component-container .disabled\:cursor-not-allowed:disabled {cursor: not-allowed !important;}
  
/* Add more component-specific styles as needed */